#!/usr/bin/python

import tensorflow as tf
import numpy as np
good = [[90,80,90],[92,75,60],[86,80,90],[78,90,80],[77,78,60],[99,69,98],[78,90,80],[99,99,60],[80,85,83],[100,90,70],[92,85,88]]
bad = [[60,50,40],[72,75,60],[86,40,50],[58,60,50],[70,70,60],[90,30,50],[78,50,60],[85,66,60],[70,75,73],[90,30,40],[60,60,60]]

x1 = tf.placeholder(tf.float32, [3])

yTrain = tf.placeholder( tf.float32 )

w = tf.Variable( tf.zeros([3]), tf.float32 )

b = tf.Variable( 80, dtype=tf.float32 )

wn = tf.nn.softmax(w)

n1 = x1 * wn  

n2 = tf.reduce_sum( n1 ) - b

y = tf.nn.sigmoid(n2)

loss = tf.abs(  y - yTrain )

optimizer = tf.train.RMSPropOptimizer( 0.1 )

train = optimizer.minimize( loss )

sess = tf.Session()

init = tf.global_variables_initializer()

sess.run(init)

print("start traning")


for i in range(2):
	for value in good:
		result = sess.run( [ train, wn, y, yTrain, loss ], feed_dict = { x1 : value , yTrain : 1 })
		print("goods: y = {0}, loss = {1}".format(result[2], result[3]) )
		print (result)

	for value in bad:
		result = sess.run( [ train, wn, y, yTrain, loss ], feed_dict = { x1 : value , yTrain : 0 })
		print("bads: y = {0}, loss = {1}".format(result[2], result[3]) )
		print (result)
	

#预测
print(y.eval(session=sess,feed_dict={ x1 : [98,60,89]}))



